{"version":3,"file":"static/webpack/static/development/pages/index.js.9c58d1b0bd2ee1ef96af.hot-update.js","sources":["webpack:///./components/Match/Matches.js"],"sourcesContent":["import moment from \"moment\";\n// import Match from \"./Match\"\nimport ReactTable from \"react-table\";\n\n// const MatchesOld = ({ matches }) => (\n//   <table className=\"table\">\n//     <thead>\n//       <tr>\n//         {Object.keys(matches[0])\n//           .filter(val => val !== \"id\")\n//           .map(head => (\n//             <td>{head}</td>\n//           ))}\n//       </tr>\n//     </thead>\n//     <tbody>\n//       {matches.map((match, i) => (\n//         <Match data={match} />\n//       ))}\n//     </tbody>\n//   </table>\n// )\n\nexport const Matches = ({ matches, currentTime, isLoading }) => (\n  <div>\n    {/* <MatchesOld matches={matches} /> */}\n    <ReactTable\n      loading={isLoading}\n      showPageJump={false}\n      showPageSizeOptions={false}\n      TableComponent={props => <Table props={props} />}\n      TheadComponent={props => <Thead props={props} />}\n      TbodyComponent={props => <Tbody props={props} />}\n      TrGroupComponent={props => <TrGroup props={props} />}\n      TrComponent={props => <Tr props={props} />}\n      ThComponent={props => <Th props={props} />}\n      TdComponent={props => <Td props={props} />}\n      PaginationComponent={props => <PaginationComponent props={props} />}\n      data={matches}\n      columns={[\n        {\n          Header: \"Title\",\n          accessor: \"title\"\n        },\n        { Header: \"Owner\", accessor: \"owner\" },\n        { Header: \"Reservation Date\", accessor: \"reservation_date\" }\n      ]}\n      defaultPageSize={5}\n    />\n  </div>\n);\n\nconst Table = ({ props }) => (\n  <table className=\"table\" style={{ minWidth: \"100%\" }}>\n    {props.children}\n  </table>\n);\nconst Thead = ({ props }) => (\n  <thead>\n    <tr>{props.children.children}</tr>\n  </thead>\n);\nconst Tbody = ({ props }) => <tbody>{props.children}</tbody>;\nconst TrGroup = ({ props }) => props.children[0];\nconst Tr = ({ props }) => {\n  // TODO: Format this\n  // const rowTime = moment(props.children[2].children[0])\n  // const startRange = moment(\"3:00pm\", \"h:mma\")\n  // const endRange = moment(\"5:00pm\", \"h:mma\")\n\n  // TODO: Check this out.\n  // const isCurrent = rowTime.isBetween(startRange, endRange)\n  const isCurrent = false;\n\n  return <tr className={isCurrent ? \"is-selected\" : \"\"}>{props.children}</tr>;\n};\nconst Th = ({ props }) => <th>{props.children}</th>;\nconst Td = ({ props }) => {\n  console.log('is valid?', moment(props.children).isValid())\n  if(moment(props.children).isValid) {\n    return <td>{moment(props.children)}</td>\n  } else {\n    return <td>{props.children}</td>;\n  }\n  \n}\n\nconst PaginationComponent = ({ props }) => (\n  <div className=\"columns\">\n    <div className=\"column\" style={{ textAlign: \"center\" }}>\n      <button className=\"button is-secondary\">A button</button>\n    </div>\n    <div className=\"column\" style={{ textAlign: \"center\" }}>\n      <span>Text</span>\n    </div>\n    <div className=\"column\" style={{ textAlign: \"center\" }}>\n      <button className=\"button is-secondary\">A button</button>\n    </div>\n  </div>\n);\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AArBA;AAHA;AACA;AA4BA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AATA;;;;A","sourceRoot":""}